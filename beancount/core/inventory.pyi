# Stubs for beancount.core.inventory (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
import misc_utils
from beancount.core.position import from_string as position_from_string

class Booking(misc_utils.Enum):
    CREATED = ...  # type: int
    REDUCED = ...  # type: int
    AUGMENTED = ...  # type: int
    IGNORED = ...  # type: int

class Inventory(list):
    def __init__(self, positions: Optional[Any] = ...) -> None: ...
    def to_string(self, dformat: Any = ..., parens: bool = ...): ...
    def is_empty(self): ...
    def __bool__(self): ...
    def __copy__(self): ...
    def __eq__(self, other): ...
    def is_small(self, tolerances, default_tolerances: Optional[Any] = ...): ...
    def is_mixed(self): ...
    def is_reduced_by(self, ramount): ...
    def __neg__(self): ...
    def __mul__(self, scalar): ...
    def currencies(self): ...
    def cost_currencies(self): ...
    def currency_pairs(self): ...
    def get_positions(self): ...
    def get_units(self, currency): ...
    def segregate_units(self, currencies): ...
    def units(self): ...
    def cost(self): ...
    def average(self): ...
    def add_amount(self, units, cost: Optional[Any] = ...): ...
    def add_position(self, position): ...
    def add_inventory(self, other): ...
    def __add__(self, other): ...
    __iadd__ = ...  # type: Any
    @staticmethod
    def from_string(string): ...

from_string = ...  # type: Any

def check_invariants(inv): ...
def get_tolerance(tolerances, default_tolerances, currency): ...
