# Stubs for beancount.core.position (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from beancount.core.amount import mul as amount_mul
from collections import namedtuple

Cost = namedtuple('Cost', 'number currency date label')

CostSpec = namedtuple('CostSpec', 'number_per number_total currency date label merge')

def cost_to_str(cost, dformat, detail: bool = ...): ...

CURRENCY_ORDER = ...  # type: Any
NCURRENCIES = ...  # type: Any

def get_position(posting): ...
def to_string(pos, dformat: Any = ..., detail: bool = ...): ...

class Position:
    cost_types = ...  # type: Any
    units = ...  # type: Any
    cost = ...  # type: Any
    def __init__(self, units, cost: Optional[Any] = ...) -> None: ...
    def __hash__(self): ...
    def to_string(self, dformat: Any = ..., detail: bool = ...): ...
    def __eq__(self, other): ...
    def sortkey(self): ...
    def __lt__(self, other): ...
    def __copy__(self): ...
    def set_units(self, units): ...
    def currency_pair(self): ...
    def get_cost(self): ...
    def at_cost(self): ...
    def add(self, number): ...
    def get_negative(self): ...
    __neg__ = ...  # type: Any
    def __mul__(self, scalar): ...
    def is_negative_at_cost(self): ...
    @staticmethod
    def from_string(string): ...
    @staticmethod
    def from_amounts(units, cost_amount: Optional[Any] = ...): ...

from_string = ...  # type: Any
from_amounts = ...  # type: Any
